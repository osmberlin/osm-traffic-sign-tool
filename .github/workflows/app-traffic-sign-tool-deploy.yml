# See https://github.com/gregrickaby/nextjs-github-pages
name: App 'Traffic Sign Tool' â€” Deploy to Github Pages

on:
  push:
    branches:
      - main
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# Cancel in-progress runs.
concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        # Will use the version from package.json https://github.com/pnpm/action-setup?tab=readme-ov-file#version
        uses: pnpm/action-setup@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          # See ./NODE_VERSION.md
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      - name: Setup Pages
        uses: actions/configure-pages@v4

      # TODO It is not clear how this works with pnpm, so lets disable it for now
      # Source https://github.com/gregrickaby/nextjs-github-pages/blob/main/.github/workflows/deploy.yml#L62-L71
      # - name: Restore cache
      #   uses: actions/cache@v4
      #   with:
      #     path: |
      #       .next/cache
      #     # Generate a new cache whenever packages or source files change.
      #     key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
      #     # If source files changed but packages didn't, rebuild from a prior cache.
      #     restore-keys: |
      #       ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - name: Install dependencies
        run: pnpm install
        working-directory: apps/traffic-sign-tool

      - name: Build with Next.js
        run: pnpm run build
        working-directory: apps/traffic-sign-tool

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./apps/traffic-sign-tool/out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
